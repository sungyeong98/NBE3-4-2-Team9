plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //Jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //Spring-Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'mysql:mysql-connector-java:8.0.33'
//    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // jwt
    implementation "io.jsonwebtoken:jjwt-api:0.12.6"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.12.6"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.12.6"

    // springboot dev-tools
    implementation 'org.springframework.boot:spring-boot-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // Oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.json:json:20231013'

    //Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // spring-retryTemplate
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Mongo
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 빌드 옵션 (옵셔널)
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [generated]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

jar {
    enabled = false
}