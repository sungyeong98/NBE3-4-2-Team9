name: Build and Push Docker Image
on:
  push:
    paths:
      - '.github/workflows/**'
      - 'backend/src/**'
      - 'backend/build.gradle'
      - 'backend/build.gradle.kts'
      - 'backend/Dockerfile'
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag_name: ${{ steps.create_tag.outputs.new_tag }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
    - name: Build with Gradle
      run: |
        cd backend
        echo '${{ secrets.APPLICATION_YML }}' > src/main/resources/application.yml
        echo '${{ secrets.APPLICATION_DEV_YML }}' > src/main/resources/application-dev.yml
        echo '${{ secrets.APPLICATION_OAUTH_YML }}' > src/main/resources/application-oauth.yml
        ./gradlew bootJar
    - name: Create Tag
      id: create_tag
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.REPOSITORY_TOKEN }}
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}
      with:
        tag_name: ${{ steps.create_tag.outputs.new_tag }}
        release_name: Release ${{ steps.create_tag.outputs.new_tag }}
        body: ${{ steps.create_tag.outputs.changelog }}
        draft: false
        prerelease: false
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.REPOSITORY_TOKEN }}
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/backend
        tags: |
          latest
          ${{ needs.makeTagAndRelease.outputs.tag_name }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
    - name: Jenkins deploy
      if: success()
      uses: appleboy/jenkins-action@master
      with:
        url: ${{ secrets.JENKINS_URL }}
        user: ${{ secrets.JENKINS_USER }}
        token: ${{ secrets.JENKINS_DEPLOY_TOKEN }}
        job: ${{ secrets.JENKINS_JOB }}
